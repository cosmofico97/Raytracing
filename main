#!/usr/bin/env julia

using Pkg
Pkg.activate(normpath(@__DIR__))
Pkg.instantiate()

using Colors
import ColorTypes:RGB
using Raytracing
using Images, ImageIO

#=
function main() 
		println("\nusage: ./main input_pfm_filename output_png_filename")
		return nothing
end
=#

function main(args)
	if isempty(args) || length(args)==1 || length(args)>4
        println("\ncorrect usage: ./main input_pfm_filename output_png_filename [a , [Î³]]")
	   return nothing
	end  

	parameters = nothing
	try
		parameters =  Raytracing.Parameters(Raytracing.parse_command_line(args)...)
	catch e
		println("Error: ", e)
		return nothing
	end

	img=open(parameters.infile, "r") do inpf
			Raytracing.read(inpf, HDRimage)
		end

	println("\nfile $(parameters.infile) has been read from disk.\n")

	Raytracing.normalize_image(img, parameters.a)
	Raytracing.clamp_image(img)

	Images.save(parameters.outfile, Raytracing.ribaltare(img))
	#Images.save(Images.File(PNG,parameters.outfile), img.rgb_m)
	#Images.save(File("PNG", parameters.outfile), img.rgb_m)

	println("\nFile $(parameters.outfile) has been written into the disk.\n")

	return nothing
end

main(ARGS)