
sky_material = 
    Material(
        DiffuseBRDF(UniformPigment(RGB{Float32}(0., 0., 0.))),
        UniformPigment(RGB{Float32}(1.0, 0.9, 0.5)),
    )

ground_material = 
    Material(
        DiffuseBRDF(
            CheckeredPigment(
                RGB{Float32}(0.3, 0.5, 0.1),
                RGB{Float32}(0.1, 0.2, 0.5),
            )
        )
    )

sphere_material = 
    Material(DiffuseBRDF(UniformPigment(to_RGB(0, 128, 240))))
mirror_material = 
    Material(SpecularBRDF(UniformPigment(to_RGB(232, 10, 10))))
mirror_material_2 = 
    Material(SpecularBRDF(UniformPigment(to_RGB(178, 255, 102))))


add_shape!(
    world,
    Sphere(
        scaling(Vec(50, 50, 50)) * translation(Vec(0, 0, 0)),
        sky_material,
    )
)

add_shape!(
    world, 
    Plane(
        Transformation(), 
        ground_material,
    )
)
add_shape!(
    world, 
    Plane(
        translation(Vec(0., -2., 0)) * rotation_z(π/6.) * rotation_x(π/2.), 
        mirror_material_2,
    )
)

s1, s2 = 0.6, 1.0
add_shape!(
    world,
    Sphere(
        translation(Vec(0, 0, 0.3)) * scaling(Vec(s1, s1, s1)),
        sphere_material,
    )
)
add_shape!(
    world,
    Sphere(
        translation(Vec(0.4, 1.5, 0)) * scaling(Vec(s2, s2, s2)),
        mirror_material,
    )
)

add_light!(
    world, 
    PointLight(Point(-1.0, 1.0, 1.0), 
    RGB{Float32}(100.0, 100.0, 100.0))
)

return world
end